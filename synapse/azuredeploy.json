{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",                 
      "parameters" : {
	     "prefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix to be used for naming resources"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for your deployment."
            }
        },
        "storageSKU": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS"
            ]
        },
        "firewallIPRanges": {
            "type": "array",
            "defaultValue": [ "0.0.0.0./0" ]
        },
        "storageDeployTemplateUri": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/isinghrana/my-azure-utils/isr-synapse-public/synapse/nestedtemplates/storagedeploy.json"
        },
        "synapseDeployTemplateUri": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/isinghrana/my-azure-utils/isr-synapse-public/synapse/nestedtemplates/synapseworkspacedeploy.json"
        },
        "grantSynapseWorkspaceMIControlONSqlPool": {
            "type": "bool",
            "defaultValue": false
        },
        "synapseWorkspaceFirewallStartEndIPRanges": {
            "type": "array",
            "metadata": {
                "description" : "These will need match with the Firewall IP Ranges, Storage and Synapse take Firewal IP ranges in different formats so this is redundant hopefully there will be a better way the f uture but for now specifiy IP Ranges in two foramts. Each element of array is a comma-separted tuple where first tuple is SartIPAddress and second is EndIPAddress. Example - If CIDR Range is 173.10.100.0/24 then value is 173.10.100.0,173.10.100.255. You can use the following online tool to get the ranges from CIDR block - https://www.ipaddressguide.com/cidr"
            }
        },
          "deploySpark": {
            "type": "bool",
            "defaultValue": true
        },
        "sparkNodeSize": {
            "type": "string",
            "defaultValue": "Small",
            "allowedValues": [
                "Small",
                "Medium",
                "Large"
            ]
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The username of the SQL Administrator"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the SQL Administrator"
            }
        },
        "sqlSku": {
            "type": "string",
            "defaultValue": "DW100c",
            "allowedValues": [
                "DW100c",
                "DW200c",
                "DW300c",
                "DW400c",
                "DW500c",
                "DW1000c",
                "DW1500c",
                "DW2000c",
                "DW2500c",
                "DW3000c"
            ],
            "metadata": {
                "description": "Select the SKU of the SQL pool."
            }
        }
    },
    "variables": {
        "defaultApiVersion": "2021-04-01",
        "primaryStorageName": "[concat(parameters('prefix'), 'prstg')]",
        "secondaryStorageName": "[concat(parameters('prefix'), 'sdstg')]",
        "primaryStorageContainerName": "synapsedefault",
        "secondaryStorageContainerName": "data"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "PrimaryStorageLinkedTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('storageDeployTemplateUri')]"
                },
                "parameters": {
                    "storageName": {
                        "value": "[variables('primaryStorageName')]"
                    },
                    "storageContainerName": {
                        "value": "[variables('primaryStorageContainerName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageSKU": {
                        "value": "[parameters('storageSKU')]"
                    },
                    "firewallIPRanges": {
                        "value": "[parameters('firewallIPRanges')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "SecondaryStorageLinkedTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('storageDeployTemplateUri')]"
                },
                "parameters": {
                    "storageName": {
                        "value": "[variables('secondaryStorageName')]"
                    },
                    "storageContainerName": {
                        "value": "[variables('secondaryStorageContainerName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageSKU": {
                        "value": "[parameters('storageSKU')]"
                    },
                    "firewallIPRanges": {
                        "value": "[parameters('firewallIPRanges')]"
                    }
                }
            }
        } ,
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "SynapseWorkspaceLinkedTemplate",
            "dependsOn": [
                    "PrimaryStorageLinkedTemplate"
            ] ,
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[parameters('synapseDeployTemplateUri')]"
                },
                "parameters": {
                    "synapseNamePrefix": {
                        "value": "[parameters('prefix')]"
                    },
                    "defaultStorageName": {
                        "value": "[variables('primaryStorageName')]"
                    },
                    "defaultStorageContainerName": {
                        "value": "[variables('primaryStorageContainerName')]"
                    },
                    "grantWorkspaceMIControlOnSqlPool": {
                        "value": "[parameters('grantSynapseWorkspaceMIControlONSqlPool')]"
                    },
                    "firewallStartEndIPRanges": {
                        "value": "[parameters('synapseWorkspaceFirewallStartEndIPRanges')]"
                    },
                    "sparkDeployment" : {
                        "value": "[if(parameters('deploySpark'), 'true', 'false')]"
                    },
                    "sparkNodeSize": {
                        "value": "[parameters('sparkNodeSize')]"
                    },
                    "sqlAdministratorLogin": {
                        "value": "[parameters('sqlAdministratorLogin')]"
                    },
                    "sqlAdministratorLoginPassword": {
                        "value": "[parameters('sqlAdministratorLoginPassword')]"
                    },
                    "sku": {
                        "value": "[parameters('sqlSku')]"
                    }                    
                }                
            }
        }
    ],    
    "outputs": {
            "workspaceName": {
                "type": "string",
                "value": "[reference('SynapseWorkspaceLinkedTemplate').outputs.workspacename.value]"
            },
            "workspaceResourceId": {
                "type": "string",
                "value": "[reference('SynapseWorkspaceLinkedTemplate').outputs.workspaceresourceid.value]"
            },
            "primaryStorageName": {
                "type": "string",
                "value": "[variables('primaryStorageName')]"
            },
            "secondaryStorageName": {
                "type": "string",
                "value": "[variables('secondaryStorageName')]"
            }
        }
}
